{"version":3,"sources":["assets\\Scripts\\MainControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nexport  enum GameStatus{\r\n        Game_Ready=0,\r\n        Game_Playing ,\r\n        Game_Over,\r\n}\r\n@ccclass\r\nexport default class MainControl extends cc.Component {\r\n    \r\n    @property(cc.Sprite)\r\n    spBG: cc.Sprite[] = [null, null];\r\n    @property(cc.Prefab)\r\n    pipePrefab: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    StartButton;\r\n\r\n    pipe: cc.Node[] = [null, null, null]\r\n    gameStatus:GameStatus=GameStatus.Game_Over\r\n    \r\n    @property(cc.Sprite)\r\n    spGameOver;\r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n    \r\n    // record score\r\n    gameScore: number = 0;\r\n\r\n     onLoad () {\r\n        var collisionManager = cc.director.getCollisionManager();\r\n        collisionManager.enabled = true;\r\n        //open debug draw when you debug the game\r\n        //do not forget to close when you ship the game\r\n        collisionManager.enabledDebugDraw = true;\r\n   \r\n        // find the GameOver node, and set active property to false\r\n        this.spGameOver = this.node.getChildByName(\"GameOver\").getComponent(cc.Sprite);\r\n        this.spGameOver.node.active = false;\r\n        this.StartButton=this.node.getChildByName(\"StartButton\").getComponent(cc.Button);\r\n        this.StartButton.node.on(cc.Node.EventType.TOUCH_END);\r\n    }\r\n\r\n    start() {\r\n         //this.StartButton.node.active= false;\r\n         //this.gameStatus=GameStatus.Game_Playing;\r\n         //this.spGameOver.node.active=false;\r\n        for (let i = 0; i < this.pipe.length; i++) {\r\n            this.pipe[i] = cc.instantiate(this.pipePrefab);\r\n            this.node.addChild(this.pipe[i]);\r\n\r\n            this.pipe[i].x = 170 + 200 * i;\r\n            var minY = -120;\r\n            var maxY = 120;\r\n            this.pipe[i].y = minY + Math.random() * (maxY - minY);\r\n\r\n            this.gameScore = 0;\r\n            this.labelScore.string = this.gameScore.toString();\r\n\r\n            var Bird = this.node.getChildByName(\"Bird\");\r\n            Bird.y=0;\r\n            Bird.rotation=0;\r\n        }\r\n\r\n    }\r\n    update(dt: number) {\r\n        if(this.gameStatus == GameStatus.Game_Playing){\r\n            return;\r\n            \r\n        }\r\n        for (let i = 0; i < this.spBG.length; i++) {\r\n            this.spBG[i].node.x -= 1 ;\r\n            if (this.spBG[i].node.x <= -900) {\r\n                this.spBG[i].node.x = 900;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.pipe.length; i++) {\r\n            this.pipe[i].x -= 1.0;\r\n            if (this.pipe[i].x <= -170) {\r\n                this.pipe[i].x = 430;\r\n\r\n                var minY = -120;\r\n                var maxY = 120;\r\n                this.pipe[i].y = minY + Math.random() * (maxY - minY);\r\n            }\r\n        }\r\n\r\n    }\r\n    gameOver () {\r\n        this.spGameOver.node.active = true;\r\n       // cc.log(\"Game_Over\");\r\n        this.StartButton.Node.active = true;\r\n        this.gameStatus= GameStatus.Game_Over;\r\n    \r\n    }\r\n    /**onCollisionEnter (other: cc.Collider, self: cc.Collider) {\r\n        //game over\r\n        cc.log(\"game over\");\r\n    }**/\r\n}\r\n"]}